# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MsnTagsDataModelTagEntityLibSysTag(Model):
    """MsnTagsDataModelTagEntityLibSysTag.

    :param source_type: Get or set the SourceType of the SysTag
    :type source_type: str
    :param is_enabled: Get or set the IsEnabled
    :type is_enabled: bool
    :param feed_stream_cms_id: Get or set CMS feed stream id
    :type feed_stream_cms_id: str
    :param labels: Get or set labels in CMS
    :type labels: list[str]
    :param editors_pick_list_cms_ids: Get or set a list of editor curated Ids
    :type editors_pick_list_cms_ids: list[str]
    :param cms_odata_querys: Get or set a list of cms Odata querys
    :type cms_odata_querys: list[str]
    :param top_on_editors_pick_list: Get or set first x items
    :type top_on_editors_pick_list: long
    :param artifact_picks: Get or set the artifact picks, name to system
     collection id mapping
    :type artifact_picks: dict[str, str]
    :param synonyms: Get or set the list of synonyms
    :type synonyms: list[str]
    :param related_feed_ids: Get or set the list of feed Ids
    :type related_feed_ids: list[str]
    :param is_editor_curation_enabled: Get or set CMS field
     IsEditorCurationEnabled
    :type is_editor_curation_enabled: bool
    :param is_auto_curation_enabled: Get or set CMS field
     IsEditorCurationEnabled
    :type is_auto_curation_enabled: bool
    :param is_bing_backfill_enabled: Get or set CMS field
     IsBingBackfillEnabled
    :type is_bing_backfill_enabled: bool
    :param is_msn_backfill_enabled: Get or set CMS field IsMsnBackfillEnabled
    :type is_msn_backfill_enabled: bool
    :param is_cms_odata_query_enabled: Get or set CMS field
     IsCmsODataQueryEnabled
    :type is_cms_odata_query_enabled: bool
    :param is_suggestion_enabled: Determines whether this systag is to be
     shown in Suggestions
     If false, will not be shown. Otherwise it will
    :type is_suggestion_enabled: bool
    :param is_location: Determines whether this systag is a location
    :type is_location: bool
    :param image:
    :type image:
     ~microsoft.swagger.codegen.microsoftnewsapi.models.MsnTagsDataModelTagEntityLibArtifactDataImage
    :param source_index: Get or set the index in the source
    :type source_index: int
    :param start_round: Get or set start round
    :type start_round: int
    :param end_round: Get or set end round
    :type end_round: int
    :param take_per_round: Get or set take per round
    :type take_per_round: int
    :param is_top_story: Get or set the flag of is topstory
    :type is_top_story: bool
    :param cms_source_ids: Get or set the CMS source ids.
    :type cms_source_ids: list[str]
    :param location:
    :type location:
     ~microsoft.swagger.codegen.microsoftnewsapi.models.MsnTagsDataModelTagEntityLibLocation
    :param popularity: Get or set popularity score for systag
    :type popularity: int
    :param original_source: Gets or sets the original source.
    :type original_source: str
    :param lowercase_name: Get or set the lower case name
    :type lowercase_name: str
    :param feed_type: Get or set the feed type (systag or usertag)
    :type feed_type: str
    :param name: Get or set the Name
    :type name: str
    :param owner_id: Get or set the OwnerId of the action
    :type owner_id: str
    :param item_count: Get or set the count of items that are included
    :type item_count: long
    :param type: Get or set the Type of the Card.
     Please use ContentTypes for this property although we don't use a strong
     name for easier backward compatibilty for future extension.
    :type type: str
    :param url: Get or set the Clickable Url of the Card
    :type url: str
    :param data_url: Get or set the Fetchable Data Url of the Card Content
    :type data_url: str
    :param locale: Gets or sets Locale of the Card (optional) for extra
     information purpose.
    :type locale: str
    :param _p: Get or set the PartitionKey of the entity
    :type _p: str
    :param created_by: Get or set the CreatedBy of the entity
    :type created_by: str
    :param created_date_time: Get or set the CreateDate of the entity
    :type created_date_time: str
    :param updated_date_time: Get or set the ModifiedDate of the entity
    :type updated_date_time: str
    :param deleted: Get or set whether the entity is Deleted
    :type deleted: bool
    :param _et: Get or set the extended type
    :type _et: str
    :param id:
    :type id: str
    :param _t:
    :type _t: str
    :param _etag:
    :type _etag: str
    :param _rid:
    :type _rid: str
    :param _self:
    :type _self: str
    :param _ts:
    :type _ts: long
    """

    _attribute_map = {
        'source_type': {'key': 'sourceType', 'type': 'str'},
        'is_enabled': {'key': 'isEnabled', 'type': 'bool'},
        'feed_stream_cms_id': {'key': 'feedStreamCmsId', 'type': 'str'},
        'labels': {'key': 'labels', 'type': '[str]'},
        'editors_pick_list_cms_ids': {'key': 'editorsPickListCmsIds', 'type': '[str]'},
        'cms_odata_querys': {'key': 'cmsODataQuerys', 'type': '[str]'},
        'top_on_editors_pick_list': {'key': 'topOnEditorsPickList', 'type': 'long'},
        'artifact_picks': {'key': 'artifactPicks', 'type': '{str}'},
        'synonyms': {'key': 'synonyms', 'type': '[str]'},
        'related_feed_ids': {'key': 'relatedFeedIds', 'type': '[str]'},
        'is_editor_curation_enabled': {'key': 'isEditorCurationEnabled', 'type': 'bool'},
        'is_auto_curation_enabled': {'key': 'isAutoCurationEnabled', 'type': 'bool'},
        'is_bing_backfill_enabled': {'key': 'isBingBackfillEnabled', 'type': 'bool'},
        'is_msn_backfill_enabled': {'key': 'isMsnBackfillEnabled', 'type': 'bool'},
        'is_cms_odata_query_enabled': {'key': 'isCmsODataQueryEnabled', 'type': 'bool'},
        'is_suggestion_enabled': {'key': 'isSuggestionEnabled', 'type': 'bool'},
        'is_location': {'key': 'isLocation', 'type': 'bool'},
        'image': {'key': 'image', 'type': 'MsnTagsDataModelTagEntityLibArtifactDataImage'},
        'source_index': {'key': 'sourceIndex', 'type': 'int'},
        'start_round': {'key': 'startRound', 'type': 'int'},
        'end_round': {'key': 'endRound', 'type': 'int'},
        'take_per_round': {'key': 'takePerRound', 'type': 'int'},
        'is_top_story': {'key': 'isTopStory', 'type': 'bool'},
        'cms_source_ids': {'key': 'cmsSourceIds', 'type': '[str]'},
        'location': {'key': 'location', 'type': 'MsnTagsDataModelTagEntityLibLocation'},
        'popularity': {'key': 'popularity', 'type': 'int'},
        'original_source': {'key': 'originalSource', 'type': 'str'},
        'lowercase_name': {'key': 'lowercaseName', 'type': 'str'},
        'feed_type': {'key': 'feedType', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'owner_id': {'key': 'ownerId', 'type': 'str'},
        'item_count': {'key': 'itemCount', 'type': 'long'},
        'type': {'key': 'type', 'type': 'str'},
        'url': {'key': 'url', 'type': 'str'},
        'data_url': {'key': 'dataUrl', 'type': 'str'},
        'locale': {'key': 'locale', 'type': 'str'},
        '_p': {'key': '_p', 'type': 'str'},
        'created_by': {'key': 'createdBy', 'type': 'str'},
        'created_date_time': {'key': 'createdDateTime', 'type': 'str'},
        'updated_date_time': {'key': 'updatedDateTime', 'type': 'str'},
        'deleted': {'key': 'deleted', 'type': 'bool'},
        '_et': {'key': '_et', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        '_t': {'key': '_t', 'type': 'str'},
        '_etag': {'key': '_etag', 'type': 'str'},
        '_rid': {'key': '_rid', 'type': 'str'},
        '_self': {'key': '_self', 'type': 'str'},
        '_ts': {'key': '_ts', 'type': 'long'},
    }

    def __init__(self, source_type=None, is_enabled=None, feed_stream_cms_id=None, labels=None, editors_pick_list_cms_ids=None, cms_odata_querys=None, top_on_editors_pick_list=None, artifact_picks=None, synonyms=None, related_feed_ids=None, is_editor_curation_enabled=None, is_auto_curation_enabled=None, is_bing_backfill_enabled=None, is_msn_backfill_enabled=None, is_cms_odata_query_enabled=None, is_suggestion_enabled=None, is_location=None, image=None, source_index=None, start_round=None, end_round=None, take_per_round=None, is_top_story=None, cms_source_ids=None, location=None, popularity=None, original_source=None, lowercase_name=None, feed_type=None, name=None, owner_id=None, item_count=None, type=None, url=None, data_url=None, locale=None, _p=None, created_by=None, created_date_time=None, updated_date_time=None, deleted=None, _et=None, id=None, _t=None, _etag=None, _rid=None, _self=None, _ts=None):
        super(MsnTagsDataModelTagEntityLibSysTag, self).__init__()
        self.source_type = source_type
        self.is_enabled = is_enabled
        self.feed_stream_cms_id = feed_stream_cms_id
        self.labels = labels
        self.editors_pick_list_cms_ids = editors_pick_list_cms_ids
        self.cms_odata_querys = cms_odata_querys
        self.top_on_editors_pick_list = top_on_editors_pick_list
        self.artifact_picks = artifact_picks
        self.synonyms = synonyms
        self.related_feed_ids = related_feed_ids
        self.is_editor_curation_enabled = is_editor_curation_enabled
        self.is_auto_curation_enabled = is_auto_curation_enabled
        self.is_bing_backfill_enabled = is_bing_backfill_enabled
        self.is_msn_backfill_enabled = is_msn_backfill_enabled
        self.is_cms_odata_query_enabled = is_cms_odata_query_enabled
        self.is_suggestion_enabled = is_suggestion_enabled
        self.is_location = is_location
        self.image = image
        self.source_index = source_index
        self.start_round = start_round
        self.end_round = end_round
        self.take_per_round = take_per_round
        self.is_top_story = is_top_story
        self.cms_source_ids = cms_source_ids
        self.location = location
        self.popularity = popularity
        self.original_source = original_source
        self.lowercase_name = lowercase_name
        self.feed_type = feed_type
        self.name = name
        self.owner_id = owner_id
        self.item_count = item_count
        self.type = type
        self.url = url
        self.data_url = data_url
        self.locale = locale
        self._p = _p
        self.created_by = created_by
        self.created_date_time = created_date_time
        self.updated_date_time = updated_date_time
        self.deleted = deleted
        self._et = _et
        self.id = id
        self._t = _t
        self._etag = _etag
        self._rid = _rid
        self._self = _self
        self._ts = _ts
